version: 1

env:
  runtime-versions:
    nodejs: 20

backend:
  phases:
    install:
      commands:
        # Ensure Node 20
        - 'export NVM_DIR="$HOME/.nvm"; [ -s "$NVM_DIR/nvm.sh" ] || curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash'
        - '. "$NVM_DIR/nvm.sh" && nvm install 20.19.3 && nvm use 20.19.3'
        - node -v && npm -v

        # Install root deps INCLUDING devDependencies
        - export NPM_CONFIG_PRODUCTION=false
        - npm ci --no-audit --no-fund

        # Sanity: package must be present at root
        - ls -la node_modules/@aws-amplify 2>/dev/null || true
        - ls -la amplify/node_modules/@aws-amplify 2>/dev/null || true

        # Make amplify/ see those modules (symlink its node_modules to the root one)
        - rm -rf amplify/node_modules || true
        - ln -s ../node_modules amplify/node_modules
        - ls -la amplify/node_modules/@aws-amplify
    build:
      commands:
        - '. "$NVM_DIR/nvm.sh" && nvm install 20.19.3 && nvm use 20.19.3'
        - node -v && npm -v
        - pwd
        - npm config get production
        - node -e "try{console.log(require.resolve('@aws-amplify/backend/package.json'))}catch(e){console.error(e.message);process.exit(1)}"
        - npx -y @aws-amplify/backend-cli@1.8.0 pipeline-deploy --branch "$AWS_BRANCH" --app-id "$AWS_APP_ID" --outputs-out-dir ./src --outputs-version 1.4 --outputs-format json

frontend:
  phases:
    install:
      commands:
        - '. "$NVM_DIR/nvm.sh" && nvm install 20.19.3 && nvm use 20.19.3'
        - node -v && npm -v
        - npm ci --no-audit --no-fund
    build:
      commands:
        - '. "$NVM_DIR/nvm.sh" && nvm install 20.19.3 && nvm use 20.19.3'
        - npm run build
  artifacts:
    baseDirectory: .next
    files:
      - '**/*'
